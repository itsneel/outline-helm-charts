# Sample values file for using S3 storage with access/secret keys

## Global configuration
global:
  env: production

## Outline application configuration
outline:
  replicaCount: 1

  image:
    repository: outlinewiki/outline
    tag: latest
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: wiki.example.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: outline-tls
        hosts:
          - wiki.example.com

  # Configure S3 storage with access/secret keys
  storage:
    type: s3
    s3:
      useServiceAccount: false
      # Provide your AWS access and secret keys
      accessKey: "your-aws-access-key"
      secretKey: "your-aws-secret-key"
      region: "us-east-1"
      bucket: "your-outline-bucket"
      bucketUrl: "https://your-outline-bucket.s3.amazonaws.com"
      forcePathStyle: false
      acl: "private"
      # For using MinIO or other S3-compatible storage:
      # isCustomEndpoint: true
      # forcePathStyle: true

  env:
    URL: "https://wiki.example.com"
    PORT: 3000

    # Authentication (example with Google - you need at least one auth provider)
    GOOGLE_CLIENT_ID: "your-google-client-id"
    GOOGLE_CLIENT_SECRET: "your-google-client-secret"

  envSecrets:
    # Generate using: openssl rand -hex 32
    SECRET_KEY: "replace-with-a-random-key"
    UTILS_SECRET: "replace-with-a-random-key"

  # Local persistence not needed when using S3
  persistence:
    enabled: false

## PostgreSQL configuration
postgresql:
  enabled: true
  postgresqlUsername: outline
  postgresqlPassword: "replace-with-secure-password"
  postgresqlDatabase: outline
  persistence:
    enabled: true
    size: 8Gi

## Redis configuration
redis:
  enabled: true
  password: "replace-with-secure-password"
  persistence:
    enabled: true
    size: 1Gi
